# extern void pointmul_4(
#     int32_t *inA,       // 16 個 int32
#     int32_t *inB,       // 16 個 int32
#     int32_t *N,         // 4 個 int32
#     int32_t *muN        // 4 個 int32 (Barrett)
# );


int64 pointer_inA
int64 pointer_inB
int64 pointer_N
int64 pointer_muN

# 這些是函式參數
input pointer_inA
input pointer_inB
input pointer_N
input pointer_muN

# 迴圈用暫存
int64 offset
int64 end
int64 step

# 讀取的向量
reg128 a_vec
reg128 b_vec
reg128 n_vec
reg128 mu_vec

# Barrett 用暫存
reg128 z
reg128 t

enter pointmul

###############################################################################
# 1) 載入 N, muN (4-lane)
###############################################################################
n_vec  = mem128[pointer_N+0]
mu_vec = mem128[pointer_muN+0]

###############################################################################
# 2) 初始化 offset, end, step
###############################################################################
offset = 0
end    = 64    # 4-block × 16 bytes/block = 64
step   = 16

###############################################################################
# 3) 迴圈標籤
#    注意: 要在 qhasm 中正式宣告 label
###############################################################################

pointmul_loop:

###############################################################################
# 4) newA = pointer_inA + offset
#    newB = pointer_inB + offset
#    載入 4 int32 (a0[i],...,a3[i]) , (b0[i],...,b3[i]) into a_vec, b_vec
###############################################################################
int64 newA
int64 newB

newA = pointer_inA + offset
newB = pointer_inB + offset

a_vec = mem128[newA]
b_vec = mem128[newB]

###############################################################################
# 5) Barrett 3-instr: z = (a_vec * b_vec) mod n_vec
###############################################################################
4x z = a_vec * b_vec                    # (1) z = a*b (low 32 bits)
4x t = (a_vec * mu_vec) >> 31 round     # (2) t = sqrdmulh(a, mu)
4x z -= t * n_vec                       # (3) z = z - t*N

###############################################################################
# 6) 存回 inA
###############################################################################
mem128[newA] = z

###############################################################################
# 7) offset += step
###############################################################################
offset += step

###############################################################################
# 8) if offset < end => goto pointmul_loop
#    => offset - end ! => goto if !unsigned<
###############################################################################
offset - end 
goto pointmul_loop if !unsigned<

###############################################################################
# 9) return
###############################################################################
return
